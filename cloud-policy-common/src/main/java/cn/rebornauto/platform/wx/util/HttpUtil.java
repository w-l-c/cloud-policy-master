package cn.rebornauto.platform.wx.util;import java.io.BufferedInputStream;import java.io.BufferedReader;import java.io.ByteArrayOutputStream;import java.io.InputStream;import java.io.InputStreamReader;import java.io.UnsupportedEncodingException;import java.net.HttpURLConnection;import java.net.URL;import java.net.URLEncoder;import java.util.HashMap;import java.util.Iterator;import java.util.Map;import javax.servlet.http.Cookie;import org.apache.commons.lang.StringUtils;public class HttpUtil {	/**	 * 发送POST请求	 * 	 * @param reqUrl	 *            请求地址	 * @param parameters	 *            参数	 * 	 */	public static String doPost(String reqUrl, Map<String, String> parameters) {		HttpURLConnection urlConn = null;		try {			urlConn = sendPost(reqUrl, parameters);			String responseContent = getContent(urlConn);			return responseContent.trim();		} finally {			if (urlConn != null) {				urlConn.disconnect();			}		}	}	/**	 * 发送GET请求	 * 	 * @param link	 *            链接	 * @param charset	 *            编码	 * 	 */	public static String doGet(String link) {		StringBuilder cookieValues = new StringBuilder();		if (StringUtils.isNotEmpty(cookieValues.toString())) {			cookieValues.deleteCharAt(cookieValues.length() - 1);		}		HttpURLConnection conn = null;		try {			URL url = new URL(link);			conn = (HttpURLConnection) url.openConnection();			conn.setRequestMethod("GET");			conn.setRequestProperty("User-Agent", "Mozilla/5.0");			conn.setRequestProperty("Cookie", cookieValues.toString());			BufferedInputStream in = new BufferedInputStream(					conn.getInputStream());			ByteArrayOutputStream out = new ByteArrayOutputStream();			byte[] buf = new byte[1024];			for (int i = 0; (i = in.read(buf)) > 0;) {				out.write(buf, 0, i);			}			out.flush();			out.close();//			String s = new String(out.toByteArray(), "UTF-8");			String s = new String(out.toByteArray(), "GBK");			return s;		} catch (Exception e) {			throw new RuntimeException(e.getMessage(), e);		} finally {			if (conn != null) {				conn.disconnect();			}		}	}	private static String getContent(HttpURLConnection urlConn) {		try {			String responseContent = null;			InputStream in = urlConn.getInputStream();			BufferedReader rd = new BufferedReader(new InputStreamReader(in,					"UTF-8"));			String tempLine = rd.readLine();			StringBuffer tempStr = new StringBuffer();			String crlf = System.getProperty("line.separator");			while (tempLine != null) {				tempStr.append(tempLine);				tempStr.append(crlf);				tempLine = rd.readLine();			}			responseContent = tempStr.toString();			rd.close();			in.close();			return responseContent;		} catch (Exception e) {			throw new RuntimeException(e.getMessage(), e);		}	}	private static HttpURLConnection sendPost(String reqUrl,			Map<String, String> parameters) {		HttpURLConnection urlConn = null;		try {			StringBuffer params = new StringBuffer();			if (parameters != null) {				for (Iterator<String> iter = parameters.keySet().iterator(); iter						.hasNext();) {					String name = iter.next();					String value = parameters.get(name);					params.append(name + "=");					params.append(URLEncoder.encode(value, "utf-8"));					if (iter.hasNext())						params.append("&");				}			}			URL url = new URL(reqUrl);			urlConn = (HttpURLConnection) url.openConnection();			urlConn.setRequestMethod("POST");			urlConn.setConnectTimeout(50000);// （单位：毫秒）jdk			urlConn.setReadTimeout(50000);// （单位：毫秒）jdk 1.5换成这个,读操作超时			urlConn.setDoOutput(true);			urlConn.setDoInput(true);			// urlConn.setRequestProperty("User-Agent",			// "Mozilla/4.0 (compatible; MSIE 5.0; Windows NT; DigExt)");			urlConn.setRequestProperty("Content-Type",					"application/x-www-form-urlencoded");			urlConn.setRequestProperty("Accept", "*/*");			// urlConn.setRequestProperty("Cache-Control", "no-cache");			byte[] b = params.toString().getBytes();			urlConn.getOutputStream().write(b, 0, b.length);			urlConn.getOutputStream().flush();			urlConn.getOutputStream().close();		} catch (Exception e) {			throw new RuntimeException(e.getMessage(), e);		}		return urlConn;	}	public static void main(String[] args) throws UnsupportedEncodingException {		String urltest = "http://dev.tpis.tpaic.com:14080/m/out-quick-quote";		String url = "http://chexian.axatp.com/m/out-quick-quote";		String params1 = "cityCode=310100&isAgent=0&soleCode=1&ms=LM-JLWX-&tbsn=&newVehicleFlag=0&licenceNo=%E6%B2%AAA29R59&firstRegisterDate=2013-07-07&newCarPrice=150000&mobileTelephone=13386216557&personnelName=%E5%BE%90%E5%9B%BD%E5%AF%8C&encoderFlag=1";		// String ret = doGet(url + "?" + params1, null);		// System.out.println(ret);		Map<String, String> data = new HashMap<String, String>();		data.put("cityCode", "310100");		data.put("isAgent", "0");		data.put("soleCode", "1");		data.put("ms", "LM-JLWX-");		data.put("tbsn", "");		data.put("newVehicleFlag", "0");		data.put("licenceNo", "%E6%B2%AAA29R59");		data.put("mobileTelephone", "13386216557");		data.put("personnelName", "%E5%BE%90%E5%9B%BD%E5%AF%8C");		data.put("encoderFlag", "1");		String str = doPost(url, data);		System.out.println(str);	}}