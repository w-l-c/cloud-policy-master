package cn.rebornauto.platform.common;


/** Title: 返回信息
 * Description: 
 * Company: 
 * @author kgc
 * @date Apr 30, 2019 4:01:11 PM
 */
public enum ReturnMsgConst {
	/**
	 * 成功
	 */
	 RETURN_000000("000000","处理成功!")
	 /**
	  * 单次上传异常 
	  */
	,RETURN_600001("600001","单次上传异常!")
	/**
	  * 客户账户余额不足以支付!
	  */
	,RETURN_600002("600002","客户账户余额不足以支付!")
	/**
	  * 代征主体剩余额度不足以支付!
	  */
	,RETURN_600003("600003","代征主体剩余额度不足以支付!")
	/**
	  * 客户账户余额排除处理中额度不足以支付!
	  */
	,RETURN_600004("600004","客户账户余额排除处理中额度不足以支付!")
	/**
	  * 代征主体余额排除处理中额度不足以支付!
	  */
	,RETURN_600005("600005","代征主体余额排除处理中额度不足以支付!")
	
	/**
	  * 支付处理中，请到收付款列表查看!
	  */
	,RETURN_600006("600006","支付处理中，请到收付款列表查看!")
	/**
	  * 未找到需要支付的数据!
	  */
	,RETURN_600007("600007","未找到需要支付的数据!")
	/**
	  * 批量上传异常 
	  */
	,RETURN_600008("600008","批量上传异常!")
	/**
	  * 请先选择上传文件 
	  */
	,RETURN_600009("600009","请先选择上传文件!")
	/**
	  * 客户不存在 
	  */
	,RETURN_600010("600010","客户不存在!")
	/**
	  * 未匹配到代理人身份证、姓名、银行卡号
	  */
	,RETURN_600011("600011","未匹配到代理人身份证、姓名、银行卡号!")
	/**
	  * 批量数据为空!
	  */
	,RETURN_600012("600012","批量数据为空!")
	/**
	  * 待审核和已审核状态批次不可再提交数据!
	  */
	,RETURN_600013("600013","待审核和已审核状态批次不可再提交数据!")
	/**
	  * 已上传状态才可提交支付申请!
	  */
	,RETURN_600014("600014","已上传状态才可提交支付申请!")
	/**
	  * 待审核状态才可提交审核放款!
	  */
	,RETURN_600015("600015","待审核状态才可提交审核放款!")
	/**
	  * 放款异常!
	  */
	,RETURN_600016("600016","放款异常!")
	/**
	  * 并非支付时间段!
	  */
	,RETURN_600017("600017","并非支付时间段!")
	/**
	  * 审核通过状态才可提交再次放款!
	  */
	,RETURN_600018("600018","审核通过状态才可提交再次放款!")
	/**
	  * 未找到支付流水!
	  */
	,RETURN_600019("600019","未找到支付流水!")
	/**
	  * 请选择提交时间大于一小时的数据!
	  */
	,RETURN_600020("600020","请选择提交时间大于一小时的数据!")
	/**
	  * 交易结果查询异常!
	  */
	,RETURN_600021("600021","交易结果查询异常!")
	/**
	  * 交易结果成功和失败的不可更新!
	  */
	,RETURN_600022("600022","交易结果成功和失败的不可更新!")
	/**
	  * 交易结果更新异常!
	  */
	,RETURN_600023("600023","交易结果更新异常!")
	/**
	  * 无支付失败数据 !
	  */
	,RETURN_600024("600024","无支付失败数据 !")
	/**
	  * 待审核或者已审核状态不可作废明细数据!
	  */
	,RETURN_600025("600025","待审核或者已审核状态不可作废明细数据!")
	/**
	  * 作废批次明细异常!
	  */
	,RETURN_600026("600026","作废批次明细异常!")
	/**
	  * 无批次明细不可提交付款申请!
	  */
	,RETURN_600027("600027","无批次明细不可提交付款申请!")
	/**
	  * 当月额度不足以支付!
	  */
	,RETURN_600028("600028","当月额度不足以支付!")
	/**
	  * 更新批次明细表和插入汇总表异常!
	  */
	,RETURN_600029("600029","更新批次明细表和插入汇总表异常!")
	/**
	  * 订单不存在!
	  */
	,RETURN_600030("600030","订单不存在!")
	/**
	  * 开票申请失败!
	  */
	,RETURN_600031("600031","开票申请失败!")	
	/**
	  * 确认开票失败!
	  */
	,RETURN_600032("600032","确认开票失败!")	
	/**
	  * 待开票数据才能审核确认!
	  */
	,RETURN_600033("600033","待开票数据才能审核确认!")	
	/**
	  * 寄送提交失败!
	  */
	,RETURN_600034("600034","寄送提交失败!")	
	/**
	  * 已寄送不可再次寄送!
	  */
	,RETURN_600035("600035","已寄送不可再次寄送!")	
	/**
	  * 未开票不可寄送!
	  */
	,RETURN_600036("600036","未开票不可寄送!")	
	/**
	  * 寄送提交异常!
	  */
	,RETURN_600037("600037","寄送提交异常!")
	/**
	  * 保存邮寄信息失败!
	  */
	,RETURN_600038("600038","保存邮寄信息失败!")
	/**
	  * 管理员不可保存信息!
	  */
	,RETURN_600039("600039","管理员不可保存信息!")
	/**
	  * 手机号格式不正确!
	  */
	,RETURN_600040("600040","手机号格式不正确!")
	/**
	  * 申请开票金额不能大于可开票金额!
	  */
	,RETURN_600041("600041","申请开票金额不能大于可开票金额!")
	/**
	  * 未找到开票信息!
	  */
	,RETURN_600042("600042","未找到开票信息!")	
	/**
	  * 超额不可支付!
	  */
	,RETURN_600043("600043","超额不可支付!")	
	/**
	  * 支付总金额合计有误!
	  */
	,RETURN_600044("600044","支付总金额合计有误!")	
	/**
	  * 实际充值金额计算有误，请确认!
	  */
	,RETURN_600045("600045","实际充值金额计算有误，请确认!")
	/**
	  * 充值提交失败!
	  */
	,RETURN_600046("600046","充值提交失败!")
	/**
	  * 此状态不可编辑!
	  */
	,RETURN_600047("600047","此状态不可编辑!")
	/**
	  * 已审核状态，不可作废订单!
	  */
	,RETURN_600048("600048","已审核状态，不可作废订单!")
	/**
	  * 请上传发票!
	  */
	,RETURN_600049("600049","请上传发票!")
	/**
	  * 待审核和已到账状态不可编辑!
	  */
	,RETURN_600050("600050","待审核和已到账状态不可编辑!")
	/**
	  * 请选择代征主体!
	  */
	,RETURN_600051("600051","请选择代征主体!")
	/**
	  * 请上传到账凭证!
	  */
	,RETURN_600052("600052","请上传到账凭证!")
	/**
	  * 请选择到账时间!
	  */
	,RETURN_600053("600053","请选择到账时间!")
	/**
	  * 已申请 状态才能提交审核!
	  */
	,RETURN_600054("600054","已申请 状态才能提交审核!")
	/**
	  * 待审核 状态才能操作!
	  */
	,RETURN_600055("600055","待审核 状态才能操作!")
	/** 
	 * 请先录入地址信息!
	 */
	,RETURN_600056("600056","请先录入地址信息!")
	/** 
	 * 不支持交易结果查询和更新!
	 */
	,RETURN_600057("600057","不支持交易结果查询和更新!")
	;

    private String code;

    private String msg;

    public static String getMsg(String code){
        for(ReturnMsgConst e: ReturnMsgConst.values()){
            if(e.code.equals(code)){
                return e.msg;
            }
        }
        return "-";
    }

    private ReturnMsgConst(String code, String msg){
        this.code = code;
        this.msg = msg;
    }

    public String getCode() {
        return code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    public String getMsg() {
        return msg;
    }

    public void setMsg(String msg) {
        this.msg = msg;
    }

    public static boolean contain(String code){
        return !"-".equals(code);
    }

    public static String getCode(String code) {
        for(ReturnMsgConst e: ReturnMsgConst.values()){
            if(e.msg.equals(code)){
                return e.code;
            }
        }
        return "-";
    }
}
