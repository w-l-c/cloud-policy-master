<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.rebornauto.platform.business.dao.OrderDetailMapper">
	<resultMap id="BaseResultMapVO" type="cn.rebornauto.platform.business.entity.OrderDetailVO">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="dai_zheng_id" jdbcType="INTEGER" property="daiZhengId" />
    <result column="payment_channel_id" jdbcType="INTEGER" property="paymentChannelId" />
    <result column="policy_no" jdbcType="VARCHAR" property="policyNo" />
    <result column="policy_amount" jdbcType="DECIMAL" property="policyAmount" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="agent_id" jdbcType="INTEGER" property="agentId" />
    <result column="agent_name" jdbcType="VARCHAR" property="agentName" />
    <result column="idcardno" jdbcType="VARCHAR" property="idcardno" />
    <result column="open_bank_no" jdbcType="VARCHAR" property="openBankNo" />
    <result column="outtime" jdbcType="TIMESTAMP" property="outtime" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="policy_person" jdbcType="VARCHAR" property="policyPerson" />
    <result column="data_status" jdbcType="INTEGER" property="dataStatus" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="createoper" jdbcType="VARCHAR" property="createoper" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="modifyoper" jdbcType="VARCHAR" property="modifyoper" />
    <result column="modifytime" jdbcType="TIMESTAMP" property="modifytime" />
    <result column="agent_open_bank_code" jdbcType="VARCHAR" property="agentOpenBankCode" />
    <result column="customer_id" jdbcType="VARCHAR" property="customerId" />
    <result column="totalAmountQuery" jdbcType="DECIMAL" property="totalAmountQuery" />
    <result column="totalCountQuery" jdbcType="INTEGER" property="totalCountQuery" />
    <result column="check_status" jdbcType="INTEGER" property="checkStatus" />
    <result column="policyAmountFin" jdbcType="VARCHAR" property="policyAmountFin" />
    <result column="amountFin" jdbcType="VARCHAR" property="amountFin" />
    <result column="totalAmountQueryFin" jdbcType="VARCHAR" property="totalAmountQueryFin" />
    <result column="pay_status" jdbcType="INTEGER" property="payStatus" />
    <result column="payStatusResult" jdbcType="INTEGER" property="payStatusResult" />
    <result column="complete_time" jdbcType="TIMESTAMP" property="completeTime" />
    <result column="result" jdbcType="VARCHAR" property="result" />
    <result column="remark2" jdbcType="VARCHAR" property="remark2" />
    <result column="remark3" jdbcType="VARCHAR" property="remark3" />
  </resultMap>
  
  <select id="selectSumAmountByOrderId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select sum(t2.amount) amount
	from t_order t1
	left join t_order_detail t2 on t1.id=t2.order_id
	left join t_agent_bank_no_info t3 on t2.open_bank_no = t3.agent_open_bank_no
    left join t_transaction_flow  t4 on t4.agent_id=t2.agent_id and t4.open_bank_no = t2.open_bank_no
	where t1.id = #{orderId,jdbcType=INTEGER} and t1.data_status = 1 and t2.data_status = 1 and t3.data_status = 1
        and (t4.pay_status is null or t4.pay_status =3)
  </select>
  <select id="selectOrderInfoByOrderId"  resultMap="BaseResultMapVO">
  	select t2.*,t3.agent_open_bank_code ,t1.customer_id
	from t_order t1
	left join t_order_detail t2 on t1.id=t2.order_id
	left join t_agent_bank_no_info t3 on t2.open_bank_no = t3.agent_open_bank_no
	where t1.id = #{orderId,jdbcType=INTEGER} and t2.open_bank_no = #{openBankNo,jdbcType=VARCHAR} 
	and t1.data_status = 1 and t2.data_status = 1 and t3.data_status = 1
  </select>
  <select id="selectUnpayOrderInfoByOrderId" parameterType="java.lang.Integer" resultMap="BaseResultMapVO">
  	select t2.*,t3.agent_open_bank_code ,t1.customer_id
	from t_order t1
	left join t_order_detail t2 on t1.id=t2.order_id
	left join t_agent_bank_no_info t3 on t2.open_bank_no = t3.agent_open_bank_no
    left join t_transaction_flow  t4 on t4.order_detail_id = t2.id
	where t1.id = #{orderId,jdbcType=INTEGER} and t1.data_status = 1 and t2.data_status = 1 and t3.data_status = 1
        and (t4.pay_status is null or t4.pay_status =3)
  </select>
  
  
  <select id="selectByDetailQuery" resultMap="BaseResultMapVO">
        select b.totalAmountQuery,c.totalCountQuery,a.*,d.check_status
        ,Format(a.policy_amount, 2) policyAmountFin
        ,Format(a.amount, 2) amountFin
        ,Format(b.totalAmountQuery, 2) totalAmountQueryFin
        ,if(e.pay_status is null,1,e.pay_status) pay_status
        , e.complete_time
        , e.result
		from t_order_detail a 
		left join (select order_id,sum(amount) totalAmountQuery 
            		from t_order_detail 
            		where data_status = 1 and order_id = #{q.orderId,jdbcType=INTEGER} 
            		<if test="q.mergeId !=null and q.mergeId!='' ">
			            and merge_id=#{q.mergeId,jdbcType=VARCHAR}
			        </if>
            		) b on b.order_id=a.order_id
		left join (select order_id,count(*) totalCountQuery 
		            from t_order_detail 
		            where data_status = 1 and order_id = #{q.orderId,jdbcType=INTEGER} 
		            <if test="q.mergeId !=null and q.mergeId!='' ">
			            and merge_id=#{q.mergeId,jdbcType=VARCHAR}
			        </if>
		            ) c on c.order_id=a.order_id
        left join t_order d on a.order_id = d.id
        left join t_transaction_flow e on e.merge_id = a.merge_id
		where a.data_status = 1 and a.order_id = #{q.orderId,jdbcType=INTEGER}
		<if test="q.mergeId !=null and q.mergeId!='' ">
            and a.merge_id=#{q.mergeId,jdbcType=VARCHAR}
        </if>
        order by a.id desc
        limit #{p.offset,jdbcType=INTEGER},#{p.pageSize,jdbcType=INTEGER}

    </select>

    <select id="countByDetailQuery" resultType="java.lang.Long">
        select count(*)
		from t_order_detail a 
		where a.data_status = 1 and a.order_id = #{q.orderId,jdbcType=INTEGER}
		<if test="q.mergeId !=null and q.mergeId!='' ">
            and a.merge_id=#{q.mergeId,jdbcType=VARCHAR}
        </if>
    </select>
    
    <insert id="insertBatch"  parameterType="java.util.List">  
	    insert into t_order_detail (order_id,dai_zheng_id,policy_no
	    ,policy_amount,amount,agent_name,idcardno,open_bank_no,outtime,source
	    ,createoper,createtime,remark,policy_person,remark2,remark3)       
	    <foreach collection="list" item="item" index="index" separator=" union   all " >  
	        select #{item.orderId},#{item.daiZhengId},#{item.policyNo}
	        ,#{item.policyAmount},#{item.amount},#{item.agentName},#{item.idcardno}
	        ,#{item.openBankNo},#{item.outtime},#{item.source}
	        ,#{item.createoper},now(),#{item.remark},#{item.policyPerson},#{item.remark2},#{item.remark3} from dual   
	    </foreach>  
  </insert> 
  
  <select id="exportPayErrorDataExcel" resultMap="BaseResultMapVO">
        select b.policy_no,b.outtime,b.policy_person,b.policy_amount,b.agent_name,b.open_bank_no,b.idcardno,b.amount,a.pay_status 
        ,CASE a.pay_status 
	         WHEN '1' THEN '未支付' 
	         WHEN '2' THEN '已支付' 
	         WHEN '3' THEN '支付失败'
	         WHEN '4' THEN '支付处理中'
	         WHEN '5' THEN '待人工干预'
	         WHEN '6' THEN '支付关闭'
		ELSE '其他' END  payStatusResult 
		from t_order_detail b 
		left join t_transaction_flow a on b.merge_id = a.merge_id
    	where a.order_id =#{orderId,jdbcType=INTEGER}
  </select>
  
  <update id="updateDetailByIds" >
    update t_order_detail
    set merge_id = #{mergeId,jdbcType=VARCHAR},modifytime = now(),modifyoper = #{modifyoper,jdbcType=VARCHAR}
    where id in
    <foreach collection="ids" index="index" item="item" open="(" separator="," close=")"> #{item}
    </foreach>
  </update>
    
</mapper>