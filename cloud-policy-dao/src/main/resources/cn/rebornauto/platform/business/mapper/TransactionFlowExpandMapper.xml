<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.rebornauto.platform.business.dao.TransactionFlowMapper">
  <resultMap id="BaseResultMapVO" type="cn.rebornauto.platform.business.entity.TransactionFlowVO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="transaction_flow_id" jdbcType="VARCHAR" property="transactionFlowId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="customer_id" jdbcType="VARCHAR" property="customerId" />
    <result column="payment_channel_id" jdbcType="INTEGER" property="paymentChannelId" />
    <result column="dai_zheng_id" jdbcType="INTEGER" property="daiZhengId" />
    <result column="policy_no" jdbcType="VARCHAR" property="policyNo" />
    <result column="policy_amount" jdbcType="DECIMAL" property="policyAmount" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="agent_id" jdbcType="INTEGER" property="agentId" />
    <result column="agent_name" jdbcType="VARCHAR" property="agentName" />
    <result column="idcardno" jdbcType="VARCHAR" property="idcardno" />
    <result column="open_bank_no" jdbcType="VARCHAR" property="openBankNo" />
    <result column="outtime" jdbcType="TIMESTAMP" property="outtime" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="pay_status" jdbcType="INTEGER" property="payStatus" />
    <result column="ft_type_id" jdbcType="INTEGER" property="ftTypeId" />
    <result column="complete_time" jdbcType="TIMESTAMP" property="completeTime" />
    <result column="bank_code" jdbcType="VARCHAR" property="bankCode" />
    <result column="trade_code" jdbcType="VARCHAR" property="tradeCode" />
    <result column="result" jdbcType="VARCHAR" property="result" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="createoper" jdbcType="VARCHAR" property="createoper" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="modifyoper" jdbcType="VARCHAR" property="modifyoper" />
    <result column="modifytime" jdbcType="TIMESTAMP" property="modifytime" />
    <result column="totalAmountQuery" jdbcType="DECIMAL" property="totalAmountQuery" />
    <result column="totalCountQuery" jdbcType="INTEGER" property="totalCountQuery" />
    <result column="dai_zheng_name" jdbcType="VARCHAR" property="daiZhengName" />
    <result column="agentOpenBankNoArray" jdbcType="VARCHAR" property="agentOpenBankNoArray" />
    <result column="merge_id" jdbcType="VARCHAR" property="mergeId" />
    <result column="policyAmountFin" jdbcType="VARCHAR" property="policyAmountFin" />
    <result column="amountFin" jdbcType="VARCHAR" property="amountFin" />
    <result column="totalAmountQueryFin" jdbcType="VARCHAR" property="totalAmountQueryFin" />
    <result column="customerName" jdbcType="VARCHAR" property="customerName" />
    <result column="batchNo" jdbcType="VARCHAR" property="batchNo" />
    <result column="count" jdbcType="INTEGER" property="count" />
  </resultMap>
  
  <resultMap id="BaseResultMapRequestSnVO" type="cn.rebornauto.platform.business.entity.TransactionFlowVO">
    <result column="transaction_flow_id" jdbcType="VARCHAR" property="transactionFlowId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="trade_code" jdbcType="VARCHAR" property="tradeCode" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="request_sn" jdbcType="VARCHAR" property="requestSn" />
    <result column="post_time" jdbcType="TIMESTAMP" property="postTime" />
  </resultMap>
  
  <select id="selectInProcessedCustomerAmount" parameterType="java.lang.String" resultType="BigDecimal">
    select if(sum(tf.amount)is null,0,sum(tf.amount)) amount
		from t_transaction_flow tf
		where tf.ft_type_id = 1 and tf.pay_status =4
		and tf.customer_id = #{customerId}
  </select>
  
  <select id="selectByQuery" resultMap="BaseResultMapVO">
        select b.totalAmountQuery,c.totalCountQuery,d.dai_zheng_name,a.*,GROUP_CONCAT(e.agent_open_bank_no) agentOpenBankNoArray
        ,Format(a.policy_amount, 2) policyAmountFin
        ,Format(a.amount, 2) amountFin
        ,Format(b.totalAmountQuery, 2) totalAmountQueryFin
		from t_transaction_flow a 
		left join (select order_id,sum(amount) totalAmountQuery 
            		from t_transaction_flow 
            		where order_id = #{q.orderId,jdbcType=INTEGER} 
            		<if test="q.payStatus != null and q.payStatus != ''">
			            and pay_status = #{q.payStatus,jdbcType=INTEGER}
			        </if>) b on b.order_id=a.order_id
		left join (select order_id,count(*) totalCountQuery 
            		from t_transaction_flow 
            		where order_id = #{q.orderId,jdbcType=INTEGER} 
            		<if test="q.payStatus != null and q.payStatus != ''">
			            and pay_status = #{q.payStatus,jdbcType=INTEGER}
			        </if>) c on c.order_id=a.order_id
	    left join t_dai_zheng_info d on d.id = a.dai_zheng_id
	    left join (select
				distinct(a.agent_open_bank_no) agent_open_bank_no ,a.agent_id
				from t_agent_bank_no_info a
		        left join t_agent_customer b on b.agent_id = a.agent_id
				where a.data_status = 1  and b.data_status = 1 
				and b.auth_status = 2 and b.sign_status = 2
				and a.agent_id=a.agent_id
		) e on e.agent_id = a.agent_id
		where a.order_id = #{q.orderId,jdbcType=INTEGER}
		<if test="q.payStatus != null and q.payStatus != ''">
            and a.pay_status = #{q.payStatus,jdbcType=INTEGER}
        </if>
        group by a.transaction_flow_id
        order by a.id desc
        limit #{p.offset,jdbcType=INTEGER},#{p.pageSize,jdbcType=INTEGER}
    </select>

    <select id="countByQuery" resultType="java.lang.Long">
        select count(*)
		from t_transaction_flow a 
		where a.order_id = #{q.orderId,jdbcType=INTEGER}
		<if test="q.payStatus != null and q.payStatus != ''">
            and a.pay_status = #{q.payStatus,jdbcType=INTEGER}
        </if>
    </select>
    
    <select id="selectRequestSnById" resultMap="BaseResultMapRequestSnVO">
		select t.transaction_flow_id,t.trade_code,crs.request_sn,t.createtime,crs.post_time,t.order_id
		FROM t_transaction_flow t
		LEFT JOIN t_collection_repayment_sign crs on t.transaction_flow_id = crs.transaction_flow_id
		where t.transaction_flow_id = #{transactionFlowId}
		order by crs.post_time DESC
	</select>
	
	
	<select id="selectPayErrorList" parameterType="java.lang.Integer" resultType="java.lang.String">
	    select a.transaction_flow_id from t_transaction_flow a
		where a.pay_status = 3 and  a.order_id = #{orderId,jdbcType=INTEGER}
	</select>
	  
	<update id="updatePayStatusByTransactionFlowIds" >
	    update t_transaction_flow
	    set pay_status = #{payStatus,jdbcType=INTEGER}
	    ,payment_channel_id = #{paymentChannelId,jdbcType=INTEGER}
	    where transaction_flow_id in
	    <foreach collection="ids" index="index" item="item" open="(" separator="," close=")"> #{item}
	    </foreach>
	</update>
	
	<select id="selectSumAmountByOrderId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
	    select sum(t1.amount) amount,t1.customer_id
		from t_transaction_flow t1
		where t1.order_id = #{orderId,jdbcType=INTEGER} 
	        and t1.pay_status =3
	</select>
	
	<select id="selectByTransactionFlowIds" resultMap="BaseResultMap">
	    select *
		from t_transaction_flow t1
		where transaction_flow_id in
	    <foreach collection="ids" index="index" item="item" open="(" separator="," close=")"> #{item}
	    </foreach>
	</select>
	
	<sql id="queryWhereSql">
  		<if test="q.orderId != null and q.orderId != ''">
            and a.order_id = #{q.orderId,jdbcType=INTEGER}
        </if>
        <if test="q.agentName != null and q.agentName != ''">
            and a.agent_name = #{q.agentName,jdbcType=VARCHAR}
        </if>
        <if test="q.openBankNo != null and q.openBankNo != ''">
            and a.open_bank_no = #{q.openBankNo,jdbcType=VARCHAR}
        </if>
        <if test="q.batchNo != null and q.batchNo != ''">
            and g.remark = #{q.batchNo,jdbcType=VARCHAR}
        </if>
        <if test="q.customerId != null and q.customerId != ''">
            and a.customer_id = #{q.customerId,jdbcType=VARCHAR}
        </if>
        <if test="q.completeTime !=null and q.completeTime!='' ">
            and DATE_FORMAT(a.complete_time,'%Y-%m-%d') between #{q.startTime,jdbcType=TIMESTAMP} and
            #{q.endTime,jdbcType=TIMESTAMP}
        </if>
    </sql>
    
    <sql id="pageSql">
       limit #{p.offset,jdbcType=INTEGER},#{p.pageSize,jdbcType=INTEGER}
    </sql>
	
	<select id="selectTransactionFlowListByQuery" resultMap="BaseResultMapVO">
		select d.dai_zheng_name,a.*,f.customer_name customerName,g.remark batchNo,Format(if(a.amount is null,0,a.amount) , 2)  amountFin
		from t_transaction_flow a 
	    left join t_dai_zheng_info d on d.id = a.dai_zheng_id
        inner join t_customer_info f on f.id = a.customer_id
        left join (
            select distinct(merge_id) merge_id,remark from t_order_detail 
        ) g on g.merge_id = a.merge_id
		where 1=1
		and a.pay_status = 2
		<if test="q!=null">
            <include refid="queryWhereSql"></include>
        </if>
        group by a.transaction_flow_id
        order by a.id desc
        <if test="p!=null">
            <include refid="pageSql"></include>
        </if>
    </select>
    
    <select id="selectTransactionFlowCountByQuery" resultMap="BaseResultMapVO">
		select Format(if(sum(a.amount) is null,0,sum(a.amount)) , 2)  amountFin,count(1) count
		from t_transaction_flow a 
	    left join t_dai_zheng_info d on d.id = a.dai_zheng_id
        inner join t_customer_info f on f.id = a.customer_id
        left join (
            select distinct(merge_id) merge_id,remark from t_order_detail 
        ) g on g.merge_id = a.merge_id
		where 1=1
		and a.pay_status = 2
		<if test="q!=null">
            <include refid="queryWhereSql"></include>
        </if>
    </select>
    
    <select id="selectTransactionFlowExcelByQuery" resultMap="BaseResultMapVO">
		select d.dai_zheng_name,a.*,f.customer_name customerName,g.remark batchNo,Format(if(a.amount is null,0,a.amount) , 2)  amountFin
		from t_transaction_flow a 
	    left join t_dai_zheng_info d on d.id = a.dai_zheng_id
        inner join t_customer_info f on f.id = a.customer_id
        left join (
            select distinct(merge_id) merge_id,remark from t_order_detail 
        ) g on g.merge_id = a.merge_id
		where 1=1
		and a.pay_status = 2
		<if test="q!=null">
            <include refid="queryWhereSql"></include>
        </if>
        group by a.transaction_flow_id
        order by a.id desc
    </select>
	
	
</mapper>